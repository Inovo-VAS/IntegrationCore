//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicyPortal
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PolicyPortal.shortnerSoap")]
    public interface shortnerSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/shorten", ReplyAction="*")]
        System.Threading.Tasks.Task<PolicyPortal.shortenResponse> shortenAsync(PolicyPortal.shortenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstats", ReplyAction="*")]
        System.Threading.Tasks.Task<PolicyPortal.getstatsResponse> getstatsAsync(PolicyPortal.getstatsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class shortenRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="shorten", Namespace="http://tempuri.org/", Order=0)]
        public PolicyPortal.shortenRequestBody Body;
        
        public shortenRequest()
        {
        }
        
        public shortenRequest(PolicyPortal.shortenRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class shortenRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string u;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string p;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string long_url;
        
        public shortenRequestBody()
        {
        }
        
        public shortenRequestBody(string u, string p, string long_url)
        {
            this.u = u;
            this.p = p;
            this.long_url = long_url;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class shortenResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="shortenResponse", Namespace="http://tempuri.org/", Order=0)]
        public PolicyPortal.shortenResponseBody Body;
        
        public shortenResponse()
        {
        }
        
        public shortenResponse(PolicyPortal.shortenResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class shortenResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string shortenResult;
        
        public shortenResponseBody()
        {
        }
        
        public shortenResponseBody(string shortenResult)
        {
            this.shortenResult = shortenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getstatsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getstats", Namespace="http://tempuri.org/", Order=0)]
        public PolicyPortal.getstatsRequestBody Body;
        
        public getstatsRequest()
        {
        }
        
        public getstatsRequest(PolicyPortal.getstatsRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getstatsRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string code;
        
        public getstatsRequestBody()
        {
        }
        
        public getstatsRequestBody(string code)
        {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getstatsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getstatsResponse", Namespace="http://tempuri.org/", Order=0)]
        public PolicyPortal.getstatsResponseBody Body;
        
        public getstatsResponse()
        {
        }
        
        public getstatsResponse(PolicyPortal.getstatsResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getstatsResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getstatsResult;
        
        public getstatsResponseBody()
        {
        }
        
        public getstatsResponseBody(string getstatsResult)
        {
            this.getstatsResult = getstatsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface shortnerSoapChannel : PolicyPortal.shortnerSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class shortnerSoapClient : System.ServiceModel.ClientBase<PolicyPortal.shortnerSoap>, PolicyPortal.shortnerSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public shortnerSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(shortnerSoapClient.GetBindingForEndpoint(endpointConfiguration), shortnerSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public shortnerSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(shortnerSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public shortnerSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(shortnerSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public shortnerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PolicyPortal.shortenResponse> PolicyPortal.shortnerSoap.shortenAsync(PolicyPortal.shortenRequest request)
        {
            return base.Channel.shortenAsync(request);
        }
        
        public System.Threading.Tasks.Task<PolicyPortal.shortenResponse> shortenAsync(string u, string p, string long_url)
        {
            PolicyPortal.shortenRequest inValue = new PolicyPortal.shortenRequest();
            inValue.Body = new PolicyPortal.shortenRequestBody();
            inValue.Body.u = u;
            inValue.Body.p = p;
            inValue.Body.long_url = long_url;
            return ((PolicyPortal.shortnerSoap)(this)).shortenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PolicyPortal.getstatsResponse> PolicyPortal.shortnerSoap.getstatsAsync(PolicyPortal.getstatsRequest request)
        {
            return base.Channel.getstatsAsync(request);
        }
        
        public System.Threading.Tasks.Task<PolicyPortal.getstatsResponse> getstatsAsync(string code)
        {
            PolicyPortal.getstatsRequest inValue = new PolicyPortal.getstatsRequest();
            inValue.Body = new PolicyPortal.getstatsRequestBody();
            inValue.Body.code = code;
            return ((PolicyPortal.shortnerSoap)(this)).getstatsAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.shortnerSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.shortnerSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.shortnerSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://clkl.ink/api/shortner.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.shortnerSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:4000/api/shortner.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            shortnerSoap,
            
            shortnerSoap12,
        }
    }
}
