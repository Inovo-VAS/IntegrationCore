<@  
	request.DBMS().RegisterDbConnection("scdeduledexports","SqlServer","Data Source=10.136.127.35\\PRESENCE;Initial Catalog=SQLPR1;User Id=PTOOLS;Password=PTOOLS;MultipleActiveResultSets=true;");
	//request.ENV().Root="D:/mystuff/dotnetcore/bcoring/scheduledexports/bin/Debug/netcoreapp3.1/";
	request.SCHEDULES().RegisterSchedule("exports");
	var exppath="D:/mystuff/dotnetcore/bcoring/scheduledexports/bin/Debug/netcoreapp3.1/";
	var sqlstmnt="select RDATE AS DATELOADED,PCO_OUTBOUNDQUEUE.SERVICEID,PCO_OUTBOUNDSERVICE.NAME AS SERVICENAME,PCO_OUTBOUNDQUEUE.STATUS,PCO_OUTBOUNDQUEUE.PHONE,FIRSTHANDLINGDATE,LASTHANDLINGDATE,LASTQCODE,COALESCE(SERVICEQCODE.DESCRIPTION,'') AS LASTQCODEDESCRIPTION, LASTAGENT,COALESCE(AGENTNAME,'') AS LASTAGENTNAME from PREP.PCO_OUTBOUNDQUEUE INNER JOIN PREP.PCO_OUTBOUNDSERVICE ON PCO_OUTBOUNDQUEUE.SERVICEID=PCO_OUTBOUNDSERVICE.ID LEFT JOIN PVIEW.AGENTLOGIN ON AGENTLOGIN.LOGIN=LASTAGENT LEFT JOIN PVIEW.SERVICEQCODE ON PCO_OUTBOUNDQUEUE.LASTQCODE=SERVICEQCODE.QCODE WHERE PCO_OUTBOUNDQUEUE.STATUS IN (41,1) AND CAST(RDATE AS DATE)=CAST(GETDATE()-1 AS DATE) ORDER BY RDATE DESC";
	var sqlstmntonceoff="select RDATE AS DATELOADED,PCO_OUTBOUNDQUEUE.SERVICEID,PCO_OUTBOUNDSERVICE.NAME AS SERVICENAME,PCO_OUTBOUNDQUEUE.STATUS,PCO_OUTBOUNDQUEUE.PHONE,FIRSTHANDLINGDATE,LASTHANDLINGDATE,LASTQCODE,COALESCE(SERVICEQCODE.DESCRIPTION,'') AS LASTQCODEDESCRIPTION, LASTAGENT,COALESCE(AGENTNAME,'') AS LASTAGENTNAME from PREP.PCO_OUTBOUNDQUEUE INNER JOIN PREP.PCO_OUTBOUNDSERVICE ON PCO_OUTBOUNDQUEUE.SERVICEID=PCO_OUTBOUNDSERVICE.ID LEFT JOIN PVIEW.AGENTLOGIN ON AGENTLOGIN.LOGIN=LASTAGENT LEFT JOIN PVIEW.SERVICEQCODE ON PCO_OUTBOUNDQUEUE.LASTQCODE=SERVICEQCODE.QCODE WHERE PCO_OUTBOUNDQUEUE.STATUS IN (41,1) AND CAST(RDATE AS DATE)<CAST(GETDATE()-1 AS DATE) ORDER BY RDATE DESC";
	request.SCHEDULES().Get("exports").AddActionDbQuery("export", "scdeduledexports", exppath,"callbacksnotcalleddaily<timestamp yyyy-MM-dd>", sqlstmnt);
	request.SCHEDULES().Get("exports").AddActionDbQuery("exportpreviouse", "scdeduledexports", exppath,"callbacksnotcalleddailypreviouse", sqlstmntonceoff);
	request.SCHEDULES().Get("exports").Start();
	
	request.Listen("3000");//request.Listen("ssl:certfile:certificate.pfx:3000");
 @>